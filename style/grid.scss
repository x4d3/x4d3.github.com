$spacing: 1em;
$mobile-spacing: 0.5em;
$column-count: 12;
$media-sizes: (
                ("d", "default"),
                ("s", "small"),
                ("m", "medium"),
                ("l", "large")
);

@mixin column($numerator, $denominator) {
  width: ($numerator / $denominator * 100%);
}

@mixin offset($numerator, $denominator) {
  margin-left: ($numerator / $denominator) * 100%;
}

.row {
  max-width: 100%;
  margin-left: auto;
  margin-right: auto;
  overflow: hidden;
}

.column {
  box-sizing: border-box;
  float: left;
  padding-left: $spacing / 2;
  padding-right: $spacing / 2;
  width: 100%;
}

@each $size-tuple in $media-sizes {
  $size-key: nth($size-tuple, 1);
  $size-value: nth($size-tuple, 2);

  @for $i from 1 through $column-count - 1 {

    .#{$size-key}-#{$i}-#{$column-count} {
      @if $size-value != "default" {
        @include media-query($size-value) {
          @include column($i, $column-count);
        }
      } @else {
        @include column($i, $column-count);
      }
    }

    .#{$size-key}-offset-#{$i}-#{$column-count} {
      @if $size-value != "default" {
        @include media-query($size-value) {
          @include offset($i, $column-count);
        }
      } @else {
        @include offset($i, $column-count);
      }
    }

  }
}
